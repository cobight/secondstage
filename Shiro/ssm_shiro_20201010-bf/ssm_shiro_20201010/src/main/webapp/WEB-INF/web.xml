<web-app
        version="3.0"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
   http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name>Archetype Created Web Application</display-name>
    <!--spring 监听器 开始-->
    <!--作用： 1，加载配置文件  2，加载配置初始化Bean-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--spring整合mybatis配置
          加载多个配置文件  方法1  让配置文件命名有规律，都是spring- 开头 -->
        <param-value>classpath:spring-*.xml</param-value>
        <!-- 方法2  无规律时，可以指定加载-->
        <!--   <param-value>classpath:spring-mybatis-config.xml,classpath:spring-schedule-config.xml</param-value>-->
    </context-param>
    <!--spring 监听器 结束-->
    <!--shiro 过滤器 开始-->
    <!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml  后面配置文件中的bean的名称，必须和该filter匹配-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <!--targetFilterLifecycle=true  该filter初始化，运行和销毁（生命周期）都归spring管理-->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- Make sure any request you want accessible to Shiro is filtered.  确保你想要访问的所有的请求都要经过shiro的过滤 /* catches all  拦截所有 -->
    <!-- requests.  Usually this filter mapping is defined first (before all others) to -->
    <!-- ensure that Shiro works in subsequent filters in the filter chain:    确保当前过滤器在其他过滤器之前运行           -->
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--shiro 过滤器 结束-->
    <!--配置过滤器解决post中文乱码 开始-->
    <filter>
        <filter-name>charSet</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>charSet</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--配置过滤器解决post中文乱码 结束-->
    <!--springmvc 调度器 开始-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--加载自定义配置文件-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-config.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
    <!--springmvc 调度器 结束-->
    <!--资源免过滤  不进行拦截的资源配置-->
    <!--<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.css</url-pattern>
        <url-pattern>*.png</url-pattern>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>-->
</web-app>
