<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

      <!--开启包扫描 -->
      <context:component-scan base-package="com.aaa.ssm.controller"></context:component-scan>

      <!--开启springmvc注解驱动
             mvc:annotation-driven 作用：
           Spring会默认帮我们注册处理请求，参数和返回值的类
         会自动注册RequestMappingHandlerMapping、RequestMappingHandlerAdapter 与ExceptionHandlerExceptionResolver 三个bean。
           支持使用 ConversionService 实例对表单参数进行类型转换；
           支持使用 @NumberFormat annotation、@DateTimeFormat；
           支持使用 @RequestBody 和 @ResponseBody 注解
        -->

      <mvc:annotation-driven>
          <mvc:message-converters>
              <!--完成请求报文到字符串和字符串到响应报文的转换-->
              <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
              <!--请求json字符串到json对象转换，json对象（对象集合）到json字符串转换-->
              <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                  <property name="supportedMediaTypes">
                      <list>
                          <value>text/html;charset=UTF-8</value>
                          <value>application/json;charset=UTF-8</value>
                      </list>
                  </property>
              </bean>
          </mvc:message-converters>
      </mvc:annotation-driven>

       <!--上传解析器-->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
           <!--允许上传文件最大大小  默认是字节 大约10M-->
           <property name="maxUploadSize" value="10240000"></property>
       </bean>
       <!--配置视图解析器-->
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="prefix" value="/WEB-INF/jsp/"></property>
            <property name="suffix" value=".jsp"></property>
       </bean>

        <!--统一异常处理配置  方法1-->
     <!--   <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
             &lt;!&ndash;发生错误是默认跳转的页面   结合视图解析器一起使用  真正路径 /WEB-INF/jsp/default-error.jsp&ndash;&gt;
            <property name="defaultErrorView" value="default-error"></property>
            &lt;!&ndash;在错误页面输出异常信息时，使用的属性名称，如果不配置默认为exception&ndash;&gt;
            <property name="exceptionAttribute" value="ex"></property>
        </bean>-->
     <!--统一异常处理配置  方法2-->
     <bean class="com.aaa.ssm.util.GlobalExceptionHandler"></bean>
      <!--配置拦截器-->
    <!--  <mvc:interceptors>
          &lt;!&ndash;配置用户登录拦截器&ndash;&gt;
          <mvc:interceptor>
              &lt;!&ndash;拦截路径   /**  拦截所有请求  /*  拦截一级请求 /*/*  拦截两级请求 如：/dept/list.do&ndash;&gt;
              <mvc:mapping path="/*/*.do"/> &lt;!&ndash; 用户跳转登录页面和登录方法都是一级的，所有不拦截&ndash;&gt;
              <bean class="com.aaa.ssm.interceptor.UserLoginInterceptor"></bean>
          </mvc:interceptor>
          &lt;!&ndash;其他拦截器。。。&ndash;&gt;
      </mvc:interceptors>-->
</beans>